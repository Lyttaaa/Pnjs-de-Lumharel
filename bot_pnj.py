import discord
from discord.ext import commands
import os
import aiohttp
import random

# Webhook configur√© depuis Discord (d√©j√† avec image et nom)
WEBHOOK_AUBERGISTE = os.getenv("WEBHOOK_AUBERGISTE")

# Mots-cl√©s pour d√©clencher une interaction avec l'aubergiste
MOTS_CLEFS_AUBERGISTE = ["livraison", "champignon", "commande", "omelette", "ingr√©dients", "bonjour", "salut"]

# R√©pliques immersives al√©atoires
REPLIQUES_AUBERGISTE = [
    "Oh merci {user}, j'attendais justement cette livraison üçÑ !",
    "Tu tombes √† pic {user} ! Mon omelette de minuit va √™tre parfaite gr√¢ce √† toi.",
    "H√©h√©, toujours au rendez-vous toi, {user} ! Allez, bois un coup, c‚Äôest offert ! üçª",
    "Un vrai aventurier, {user} ! Merci pour ces champignons !",
    "Je commen√ßais √† m‚Äôinqui√©ter, {user}... Heureusement que t‚Äôes l√† !"
]

# Config du bot
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="?", intents=intents)

# Fonction de r√©ponse via webhook
async def repondre_aubergiste(message):
    async with aiohttp.ClientSession() as session:
        webhook = discord.Webhook.from_url(WEBHOOK_AUBERGISTE, session=session)

        reponse = random.choice(REPLIQUES_AUBERGISTE).format(user=message.author.mention)

        await webhook.send(
            content=reponse,
            username="Aubergiste de Lumharel"  # Pas n√©cessaire si d√©j√† d√©fini, mais tu peux le laisser pour forcer
        )

@bot.event
async def on_ready():
    print("üç∫ L‚ÄôAubergiste est pr√™t √† servir !")

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    contenu = message.content.lower()

    # D√©clenche si "aubergiste" est mentionn√© + mot-cl√© d√©tect√©
    mention_nom = "aubergiste" in contenu
    mention_role = any(role.name.lower() == "aubergiste" for role in message.role_mentions)
    mot_clef = any(mot in contenu for mot in MOTS_CLEFS_AUBERGISTE)

    if (mention_nom or mention_role) and mot_clef:
        await repondre_aubergiste(message)

    await bot.process_commands(message)

# Lancement du bot
bot.run(os.getenv("DISCORD_TOKEN_PNJ"))
